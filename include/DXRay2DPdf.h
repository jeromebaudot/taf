/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef _DXRay2DPdf_included_
#define _DXRay2DPdf_included_

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooRealVar.h"
#include "RooAbsCategory.h"
#include "TObject.h"
#include "TMath.h"

class DXRay2DPdf : public RooAbsPdf {
public:

  DXRay2DPdf();

  DXRay2DPdf(const char *name, const char *title,
	     RooAbsReal& _x,
	     RooAbsReal& _y,
	     RooAbsReal& _X0,
	     RooAbsReal& _sigma,
	     RooAbsReal& _beta,
	     RooAbsReal& _alpha,
	     RooAbsReal& _phi,
	     RooAbsReal& _W1,
	     RooAbsReal& _W2,
	     RooAbsReal& _W3,
	     RooAbsReal& _W4,
	     RooAbsReal& _W5,
	     RooAbsReal& _S2,
	     RooAbsReal& _S3,
	     RooAbsReal& _S4,
	     RooAbsReal& _S5);
  
  DXRay2DPdf(const DXRay2DPdf& other, const char* name=0);

  virtual TObject* clone(const char* newname) const;

  inline virtual ~DXRay2DPdf();


protected:

  RooRealProxy x;
  RooRealProxy y;
  RooRealProxy X0;
  RooRealProxy sigma;
  RooRealProxy beta;
  RooRealProxy alpha;
  RooRealProxy phi;
  RooRealProxy W1;
  RooRealProxy W2;
  RooRealProxy W3;
  RooRealProxy W4;
  RooRealProxy W5;
  RooRealProxy S2;
  RooRealProxy S3;
  RooRealProxy S4;
  RooRealProxy S5;
  
  double evaluate() const ;

private:

  ClassDef(DXRay2DPdf,1) // 2D pdf for X-ray data
};
 
#endif
